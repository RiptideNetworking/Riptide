{
  "sitemap": {
    "baseUrl": "https://riptide.tomweiland.net/"
  },
  "homepages": [],
  "source_base_path": "/home/runner/work/Riptide/Riptide/Docs",
  "xrefmap": "xrefmap.yml",
  "files": [
    {
      "type": "Resource",
      "output": {
        "resource": {
          "relative_path": "index.json"
        }
      }
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.MessageHandler.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.MessageHandler.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.Connected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.ConnectionFailed.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.MessageReceived.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.Disconnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.ClientConnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.ClientDisconnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.Id.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.RTT.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.SmoothRTT.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.TimeoutTime.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.IsNotConnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.IsConnecting.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.IsPending.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.IsConnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.Connection.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.ChangeTransport.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.Connect.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.CreateMessageHandlersDictionary.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.Update.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.Handle.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.Send.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.Disconnect.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.OnConnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.OnConnectionFailed.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.OnMessageReceived.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.OnDisconnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.OnClientConnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.OnClientDisconnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Client.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Client.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ClientConnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ClientConnectedEventArgs.Id.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ClientConnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ClientConnectedEventArgs.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ClientConnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ClientConnectedEventArgs.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ClientDisconnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ClientDisconnectedEventArgs.Id.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ClientDisconnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ClientDisconnectedEventArgs.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ClientDisconnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ClientDisconnectedEventArgs.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.NotifyDelivered.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.NotifyLost.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.NotifyReceived.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.ReliableDelivered.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.CanQualityDisconnect.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.Metrics.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.MaxAvgSendAttempts.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.AvgSendAttemptsResilience.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.MaxSendAttempts.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.MaxNotifyLoss.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.NotifyLossResilience.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.Id.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.IsNotConnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.IsConnecting.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.IsPending.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.IsConnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.RTT.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.SmoothRTT.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.TimeoutTime.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.CanTimeout.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.ResetTimeout.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.Send.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.OnNotifyDelivered.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.OnNotifyLost.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Connection.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ConnectionFailedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ConnectionFailedEventArgs.Reason.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ConnectionFailedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ConnectionFailedEventArgs.Message.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ConnectionFailedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ConnectionFailedEventArgs.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ConnectionFailedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ConnectionFailedEventArgs.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.DisconnectReason.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.DisconnectReason.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.DisconnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.DisconnectedEventArgs.Reason.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.DisconnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.DisconnectedEventArgs.Message.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.DisconnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.DisconnectedEventArgs.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.DisconnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.DisconnectedEventArgs.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.DuplicateHandlerException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.DuplicateHandlerException.Id.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.DuplicateHandlerException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.DuplicateHandlerException.DeclaringType1.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.DuplicateHandlerException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.DuplicateHandlerException.HandlerMethodName1.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.DuplicateHandlerException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.DuplicateHandlerException.DeclaringType2.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.DuplicateHandlerException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.DuplicateHandlerException.HandlerMethodName2.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.DuplicateHandlerException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.DuplicateHandlerException.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.DuplicateHandlerException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.DuplicateHandlerException.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.IMessageSerializable.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.IMessageSerializable.Serialize.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.IMessageSerializable.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.IMessageSerializable.Deserialize.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.IMessageSerializable.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.IMessageSerializable.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.InsufficientCapacityException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.InsufficientCapacityException.RiptideMessage.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.InsufficientCapacityException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.InsufficientCapacityException.TypeName.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.InsufficientCapacityException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.InsufficientCapacityException.RequiredBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.InsufficientCapacityException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.InsufficientCapacityException.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.InsufficientCapacityException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.InsufficientCapacityException.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.InvalidHandlerSignatureException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.InvalidHandlerSignatureException.DeclaringType.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.InvalidHandlerSignatureException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.InvalidHandlerSignatureException.HandlerMethodName.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.InvalidHandlerSignatureException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.InvalidHandlerSignatureException.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.InvalidHandlerSignatureException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.InvalidHandlerSignatureException.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.MaxHeaderSize.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.MaxSize.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.MaxPayloadSize.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.InstancesPerPeer.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.SendMode.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.ReadBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.UnreadBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.WrittenBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.UnwrittenBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.BytesInUse.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.ReadLength.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.UnreadLength.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.WrittenLength.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.Create.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.TrimPool.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.Release.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddMessage.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.ReserveBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.SkipBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.SetBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.PeekBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddVarLong.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddVarULong.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetVarLong.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetVarULong.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddByte.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddSByte.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetByte.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetSByte.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddBytes.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddSBytes.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetBytes.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetSBytes.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddBool.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetBool.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddBools.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetBools.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddShort.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddUShort.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetShort.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetUShort.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddShorts.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddUShorts.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetShorts.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetUShorts.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddInt.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddUInt.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetInt.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetUInt.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddInts.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddUInts.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetInts.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetUInts.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddLong.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddULong.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetLong.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetULong.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddLongs.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddULongs.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetLongs.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetULongs.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddFloat.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetFloat.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddFloats.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetFloats.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddDouble.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetDouble.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddDoubles.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetDoubles.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddString.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetString.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddStrings.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetStrings.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddSerializable.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetSerializable.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.AddSerializables.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.GetSerializables.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.Add.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Message.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.MessageHandlerAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.MessageHandlerAttribute.MessageId.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.MessageHandlerAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.MessageHandlerAttribute.GroupId.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.MessageHandlerAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.MessageHandlerAttribute.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.MessageHandlerAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.MessageHandlerAttribute.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.MessageReceivedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.MessageReceivedEventArgs.FromConnection.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.MessageReceivedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.MessageReceivedEventArgs.MessageId.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.MessageReceivedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.MessageReceivedEventArgs.Message.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.MessageReceivedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.MessageReceivedEventArgs.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.MessageReceivedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.MessageReceivedEventArgs.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.MessageRelayFilter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.MessageRelayFilter.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.MessageRelayFilter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.MessageRelayFilter.EnableRelay.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.MessageRelayFilter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.MessageRelayFilter.DisableRelay.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.MessageRelayFilter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.MessageRelayFilter.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.MessageSendMode.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.MessageSendMode.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.NonStaticHandlerException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.NonStaticHandlerException.DeclaringType.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.NonStaticHandlerException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.NonStaticHandlerException.HandlerMethodName.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.NonStaticHandlerException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.NonStaticHandlerException.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.NonStaticHandlerException.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.NonStaticHandlerException.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Peer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Peer.LogName.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Peer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Peer.useMessageHandlers.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Peer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Peer.defaultTimeout.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Peer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Peer.TimeoutTime.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Peer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Peer.HeartbeatInterval.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Peer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Peer.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Peer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Peer.FindMessageHandlers.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Peer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Peer.CreateMessageHandlersDictionary.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Peer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Peer.StartTime.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Peer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Peer.StopTime.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Peer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Peer.Update.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Peer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Peer.HandleMessages.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Peer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Peer.HandleData.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Peer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Peer.Handle.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Peer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Peer.IncreaseActiveCount.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Peer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Peer.DecreaseActiveCount.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Peer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Peer.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.RejectReason.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.RejectReason.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.ConnectionAttemptHandler.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.ConnectionAttemptHandler.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.MessageHandler.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.MessageHandler.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.OnClientConnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.OnConnectionFailed.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.OnMessageReceived.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.OnClientDisconnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.CreateMessageHandlersDictionary.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.Accept.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.Reject.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.Update.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.Handle.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.Send.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.SendToAll.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.TryGetClient.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.DisconnectClient.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.Stop.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.ClientConnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.ConnectionFailed.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.MessageReceived.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.ClientDisconnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.HandleConnection.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.RelayFilter.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.IsRunning.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.Port.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.TimeoutTime.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.MaxClientCount.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.ClientCount.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.Clients.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.ChangeTransport.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Server.Start.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ServerConnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ServerConnectedEventArgs.Client.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ServerConnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ServerConnectedEventArgs.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ServerConnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ServerConnectedEventArgs.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ServerConnectionFailedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ServerConnectionFailedEventArgs.Client.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ServerConnectionFailedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ServerConnectionFailedEventArgs.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ServerConnectionFailedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ServerConnectionFailedEventArgs.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ServerDisconnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ServerDisconnectedEventArgs.Client.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ServerDisconnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ServerDisconnectedEventArgs.Reason.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ServerDisconnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ServerDisconnectedEventArgs.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.ServerDisconnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.ServerDisconnectedEventArgs.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.ConnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.ConnectedEventArgs.Connection.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.ConnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.ConnectedEventArgs.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.ConnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.ConnectedEventArgs.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.DataReceivedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.DataReceivedEventArgs.DataBuffer.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.DataReceivedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.DataReceivedEventArgs.Amount.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.DataReceivedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.DataReceivedEventArgs.FromConnection.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.DataReceivedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.DataReceivedEventArgs.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.DataReceivedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.DataReceivedEventArgs.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.DisconnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.DisconnectedEventArgs.Connection.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.DisconnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.DisconnectedEventArgs.Reason.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.DisconnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.DisconnectedEventArgs.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.DisconnectedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.DisconnectedEventArgs.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.IClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.IClient.Connected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.IClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.IClient.ConnectionFailed.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.IClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.IClient.Connect.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.IClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.IClient.Disconnect.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.IClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.IClient.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.IPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.IPeer.DataReceived.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.IPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.IPeer.Disconnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.IPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.IPeer.Poll.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.IPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.IPeer.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.IServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.IServer.Connected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.IServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.IServer.Port.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.IServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.IServer.Start.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.IServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.IServer.Close.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.IServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.IServer.Shutdown.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.IServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.IServer.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.MessageHeader.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.MessageHeader.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpClient.Connected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpClient.ConnectionFailed.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpClient.DataReceived.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpClient.Connect.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpClient.Poll.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpClient.Disconnect.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpClient.OnConnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpClient.OnConnectionFailed.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpClient.OnDataReceived.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpClient.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpConnection.RemoteEndPoint.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpConnection.Send.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpConnection.ToString.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpConnection.Equals.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpConnection.GetHashCode.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpConnection.op_Equality.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpConnection.op_Inequality.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpConnection.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpPeer.Disconnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpPeer.DefaultSocketBufferSize.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpPeer.socketBufferSize.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpPeer.socket.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpPeer.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpPeer.OnDataReceived.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpPeer.OnDisconnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpPeer.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpServer.Connected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpServer.DataReceived.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpServer.Port.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpServer.MaxPendingConnections.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpServer.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpServer.Start.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpServer.Poll.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpServer.Close.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpServer.Shutdown.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpServer.OnConnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpServer.OnDataReceived.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.TcpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.TcpServer.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Tcp.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Tcp.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.SocketMode.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.SocketMode.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpClient.Connected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpClient.ConnectionFailed.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpClient.DataReceived.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpClient.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpClient.Connect.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpClient.Disconnect.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpClient.OnConnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpClient.OnConnectionFailed.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpClient.OnDataReceived.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpClient.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpConnection.RemoteEndPoint.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpConnection.Send.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpConnection.ToString.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpConnection.Equals.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpConnection.GetHashCode.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpConnection.op_Equality.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpConnection.op_Inequality.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpConnection.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpPeer.Disconnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpPeer.DefaultSocketBufferSize.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpPeer.mode.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpPeer.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpPeer.Poll.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpPeer.OpenSocket.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpPeer.CloseSocket.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpPeer.OnDataReceived.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpPeer.OnDisconnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpPeer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpPeer.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpServer.Connected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpServer.DataReceived.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpServer.Port.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpServer.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpServer.Start.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpServer.Close.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpServer.Shutdown.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpServer.OnConnected.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpServer.OnDataReceived.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.UdpServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.UdpServer.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.Udp.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.Udp.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Transports.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Transports.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.BytesIn.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.BytesOut.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.MessagesIn.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.MessagesOut.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.UnreliableBytesIn.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.UnreliableBytesOut.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.UnreliableIn.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.UnreliableOut.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.NotifyBytesIn.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.NotifyBytesOut.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.NotifyIn.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.NotifyOut.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.NotifyDiscarded.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.NotifyLost.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.NotifyDelivered.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.RollingNotifyLost.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.RollingNotifyDelivered.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.RollingNotifyLossRate.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.ReliableBytesIn.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.ReliableBytesOut.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.ReliableIn.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.ReliableOut.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.ReliableDiscarded.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.ReliableUniques.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.RollingReliableSends.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.Reset.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.ConnectionMetrics.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.ConnectionMetrics.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.BitsPerByte.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.BitsPerULong.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.ZigZagEncode.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.ZigZagDecode.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.SetBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.GetBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.SByteToBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.ByteToBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.SByteFromBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.ByteFromBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.BoolToBit.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.BoolFromBit.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.FromShort.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.FromUShort.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.ToShort.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.ToUShort.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.ShortToBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.UShortToBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.ShortFromBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.UShortFromBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.FromInt.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.FromUInt.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.ToInt.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.ToUInt.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.IntToBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.UIntToBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.IntFromBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.UIntFromBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.FromLong.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.FromULong.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.ToLong.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.ToULong.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.LongToBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.ULongToBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.LongFromBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.ULongFromBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.FromFloat.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.ToFloat.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.FloatToBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.FloatFromBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.FromDouble.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.ToDouble.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.DoubleToBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.DoubleFromBits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Converter.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Extensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Extensions.ToStringBasedOnIPFormat.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.Extensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.Extensions.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.LogType.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.LogType.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.PriorityQueue-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.PriorityQueue-2.Count.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.PriorityQueue-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.PriorityQueue-2.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.PriorityQueue-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.PriorityQueue-2.Enqueue.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.PriorityQueue-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.PriorityQueue-2.Dequeue.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.PriorityQueue-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.PriorityQueue-2.TryDequeue.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.PriorityQueue-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.PriorityQueue-2.Peek.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.PriorityQueue-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.PriorityQueue-2.PeekPriority.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.PriorityQueue-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.PriorityQueue-2.Clear.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.PriorityQueue-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.PriorityQueue-2.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.RiptideLogger.LogMethod.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.RiptideLogger.LogMethod.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.RiptideLogger.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.RiptideLogger.Log.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.RiptideLogger.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.RiptideLogger.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.RiptideLogger.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.RiptideLogger.IsDebugLoggingEnabled.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.RiptideLogger.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.RiptideLogger.IsInfoLoggingEnabled.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.RiptideLogger.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.RiptideLogger.IsWarningLoggingEnabled.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.RiptideLogger.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.RiptideLogger.IsErrorLoggingEnabled.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.RiptideLogger.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.RiptideLogger.Initialize.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.RiptideLogger.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.RiptideLogger.EnableLoggingFor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.RiptideLogger.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.RiptideLogger.DisableLoggingFor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.RollingStat.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.RollingStat.Mean.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.RollingStat.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.RollingStat.Variance.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.RollingStat.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.RollingStat.StandardDev.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.RollingStat.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.RollingStat.-ctor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.RollingStat.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.RollingStat.Add.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.RollingStat.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.RollingStat.ToString.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.RollingStat.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.RollingStat.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.Utils.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.Utils.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Riptide.yml",
      "output": {
        ".html": {
          "relative_path": "api/Riptide.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "api/toc.yml",
      "output": {
        ".html": {
          "relative_path": "api/toc.html"
        }
      },
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "images/down-arrow.svg",
      "output": {
        "resource": {
          "relative_path": "images/down-arrow.svg"
        }
      },
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "images/favicon.ico",
      "output": {
        "resource": {
          "relative_path": "images/favicon.ico"
        }
      },
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "images/logo.png",
      "output": {
        "resource": {
          "relative_path": "images/logo.png"
        }
      },
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "images/sponsor-heart.png",
      "output": {
        "resource": {
          "relative_path": "images/sponsor-heart.png"
        }
      },
      "version": ""
    },
    {
      "type": "Redirection",
      "source_relative_path": "index.md",
      "output": {
        ".html": {
          "relative_path": "index.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "manual/guides/build-docs.md",
      "output": {
        ".html": {
          "relative_path": "manual/guides/build-docs.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "manual/guides/send-modes-explained.md",
      "output": {
        ".html": {
          "relative_path": "manual/guides/send-modes-explained.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "manual/overview/about-riptide.md",
      "output": {
        ".html": {
          "relative_path": "manual/overview/about-riptide.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "manual/overview/faq.md",
      "output": {
        ".html": {
          "relative_path": "manual/overview/faq.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "manual/overview/get-started.md",
      "output": {
        ".html": {
          "relative_path": "manual/overview/get-started.html"
        }
      },
      "version": ""
    },
    {
      "type": "Redirection",
      "source_relative_path": "manual/overview/getting-started.md",
      "output": {
        ".html": {
          "relative_path": "manual/overview/getting-started.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "manual/overview/installation.md",
      "output": {
        ".html": {
          "relative_path": "manual/overview/installation.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "manual/toc.yml",
      "output": {
        ".html": {
          "relative_path": "manual/toc.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "manual/updates/guides/update-to-v2.md",
      "output": {
        ".html": {
          "relative_path": "manual/updates/guides/update-to-v2.html"
        }
      },
      "version": ""
    },
    {
      "type": "Redirection",
      "source_relative_path": "manual/updates/guides/updating-to-v2.md",
      "output": {
        ".html": {
          "relative_path": "manual/updates/guides/updating-to-v2.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "manual/updates/release-notes/v2.0.0.md",
      "output": {
        ".html": {
          "relative_path": "manual/updates/release-notes/v2.0.0.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "manual/updates/release-notes/v2.1.0.md",
      "output": {
        ".html": {
          "relative_path": "manual/updates/release-notes/v2.1.0.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "manual/updates/release-notes/v2.1.1.md",
      "output": {
        ".html": {
          "relative_path": "manual/updates/release-notes/v2.1.1.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "manual/updates/release-notes/v2.1.2.md",
      "output": {
        ".html": {
          "relative_path": "manual/updates/release-notes/v2.1.2.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "manual/updates/release-notes/v2.2.0.md",
      "output": {
        ".html": {
          "relative_path": "manual/updates/release-notes/v2.2.0.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "manual/updates/release-notes/v2.2.1.md",
      "output": {
        ".html": {
          "relative_path": "manual/updates/release-notes/v2.2.1.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "toc.yml",
      "output": {
        ".html": {
          "relative_path": "toc.html"
        }
      },
      "version": ""
    }
  ],
  "version_info": {},
  "groups": [
    {
      "xrefmap": "xrefmap.yml"
    }
  ]
}